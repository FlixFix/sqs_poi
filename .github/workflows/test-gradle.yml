# This workflow will build a Java project with Gradle
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-gradle

name: Java CI with Gradle

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

permissions: {}

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Set up JDK
      uses: actions/setup-java@v4
      with:
        distribution: 'temurin'
        java-version: '11'
        cache: 'gradle'

    - name: Install DeepSource CLI
      run: curl https://deepsource.io/cli | sh

    - name: Cache SonarQube packages
      uses: actions/cache@v4
      with:
        path: ~/.sonar/cache
        key: ${{ runner.os }}-sonar
        restore-keys: ${{ runner.os }}-sonar

    - name: Cache Gradle packages
      uses: actions/cache@v4
      with:
        path: ~/.gradle/caches
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: ${{ runner.os }}-gradle

    - name: Grant execute permission for gradlew
      run: chmod +x gradlew

    - name: Build and analyze with SonarQube
      env:
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      run: ./gradlew build jacocoTestReport sonar --info --no-daemon

    - name: Send poi coverage report to DeepSource
      run: ./bin/deepsource report --analyzer test-coverage --key java --value-file poi/build/reports/jacoco/test/jacocoTestReport.xml
      env:
        DEEPSOURCE_DSN: ${{ secrets.DEEPSOURCE_DSN }}
        
    - name: Send poi examples coverage report to DeepSource
      run: ./bin/deepsource report --analyzer test-coverage --key java --value-file poi-examples/build/reports/jacoco/test/jacocoTestReport.xml
      env:
        DEEPSOURCE_DSN: ${{ secrets.DEEPSOURCE_DSN }}
        
    - name: Send poi excelant coverage report to DeepSource
      run: ./bin/deepsource report --analyzer test-coverage --key java --value-file poi-excelant/examples/build/reports/jacoco/test/jacocoTestReport.xml
      env:
        DEEPSOURCE_DSN: ${{ secrets.DEEPSOURCE_DSN }}

    - name: Send poi integration coverage report to DeepSource
      run: ./bin/deepsource report --analyzer test-coverage --key java --value-file poi-integration/examples/build/reports/jacoco/test/jacocoTestReport.xml
      env:
        DEEPSOURCE_DSN: ${{ secrets.DEEPSOURCE_DSN }}

    - name: Send poi scratchpad coverage report to DeepSource
      run: ./bin/deepsource report --analyzer test-coverage --key java --value-file poi-scratchpad/examples/build/reports/jacoco/test/jacocoTestReport.xml
      env:
        DEEPSOURCE_DSN: ${{ secrets.DEEPSOURCE_DSN }}

